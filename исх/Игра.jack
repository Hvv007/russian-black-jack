class Игра {
    static char НАЧАТЬ;
    static char ЕЩЕ;
    static char ХВАТИТ;
    static char ВЫЙТИ;
    static char РЕЗУЛЬТАТЫ;

    field int количествоИгроков;
    field Array игроки;
    field Игрок дилер;
    field Колода колода;

    constructor Игра Новый(int кол) {
        let НАЧАТЬ     = 68;  // D
        let ЕЩЕ        = 72;  // H
        let ХВАТИТ     = 83;  // S
        let ВЫЙТИ      = 81;  // Q
        let РЕЗУЛЬТАТЫ = 82;  // R   

        let количествоИгроков = кол;
        let игроки = Array.new(кол);
        let колода = Колода.Новый();
        let дилер = Игрок.Новый();

        return this;
    }

    method void Стартовать() {
        var int индексИгрока;
        var Игрок текущийИгрок;
        var char клавиша;                            

        let индексИгрока = 0;
        do Печать.Управление();

        while (индексИгрока < количествоИгроков) {
            let игроки[индексИгрока] = Игрок.Новый();
            let текущийИгрок = игроки[индексИгрока];

            do Печать.ИнформацияОбИгроке(индексИгрока);

            do играетИгрок(текущийИгрок);

            do Печать.ИтогИгрока(индексИгрока, текущийИгрок);

            let индексИгрока = индексИгрока + 1;
        }

        do играетДилер();

        do Output.printString("NAZHMI 'R' DLYA POKAZA REZYLTATOV");

        while (клавиша = 0) {
            let клавиша = Keyboard.keyPressed();
        }

        if (клавиша = РЕЗУЛЬТАТЫ) {
            do Экран.Очистить();

            do Печать.Результаты(игроки, количествоИгроков, дилер);
        }

        return;
    }

    method void играетИгрок(Игрок игрок) {
        var Карта карта;
        var char клавиша;                            

        while (игрок.ВИгре()) {
            while (клавиша = 0) {
                let клавиша = Keyboard.keyPressed();
            }

            if ((клавиша = НАЧАТЬ) & (игрок.ПолучитьСчёт() < 1)) {
                do выдатьНовуюРуку(игрок);
            }

            if (клавиша = ВЫЙТИ) {
                do игрок.УстановитьСтатус(false);
            }

            if ((клавиша = ЕЩЕ) & (игрок.ПолучитьСчёт() < 21) & (игрок.ПолучитьСчёт() > 0)) {
                do выдатьДопКарту(игрок);
            }

            if ((клавиша = ХВАТИТ) & (игрок.ПолучитьСчёт() > 1)) {
                do игрок.УстановитьСтатус(false);
            }

            while (~(клавиша = 0)) {
                let клавиша = Keyboard.keyPressed();
            }
        }

        do Экран.Очистить();

        return;
    }

    method void выдатьНовуюРуку(Игрок игрок) {
        var int количествоКарт;
        var Карта карта;
        
        let количествоКарт = 0;
        
        do Экран.Очистить();

        do Output.printString("DILER VblDAL PYKY");
        do Output.println();
        do Output.println();

        while (количествоКарт < 2) {
            let карта = колода.ВыдатьКарту();
            do игрок.ДобавитьОчки(карта.ПолучитьЗначение());

            do Печать.Карта(карта);
            do Output.println();

            let количествоКарт = количествоКарт + 1;
        }

        do Печать.СчётИгрока(игрок);
        do Output.println();

        return;
    }

    method void выдатьДопКарту(Игрок игрок) {
        var Карта карта;

        let карта = колода.ВыдатьКарту();
        do игрок.ДобавитьОчки(карта.ПолучитьЗначение());

        do Печать.ДилерВыдалКарту(карта);
        do Output.println();
        do Печать.СчётИгрока(игрок);

        return;
    }

    method void играетДилер() {
        var Карта карта;

        while (дилер.ПолучитьСчёт() < 16) {
            let карта = колода.ВыдатьКарту();
            do дилер.ДобавитьОчки(карта.ПолучитьЗначение());
        }

        return;
    }
}